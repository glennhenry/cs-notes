"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[4778],{41908:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>g,toc:()=>s});var a=r(85893),t=r(11151);const o={slug:"/programming-language-theory",id:"programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes"},i=void 0,g={id:"programming-language-theory/programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes",source:"@site/docs/programming-language-theory/programming-language-theory-intro.md",sourceDirName:"programming-language-theory",slug:"/programming-language-theory",permalink:"/cs-notes/programming-language-theory",draft:!1,unlisted:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/programming-language-theory/programming-language-theory-intro.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1712487772,formattedLastUpdatedAt:"Apr 7, 2024",frontMatter:{slug:"/programming-language-theory",id:"programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes"},sidebar:"sidebar",previous:{title:"Complexity Theory",permalink:"/cs-notes/theory-of-computation-and-automata/complexity-theory"},next:{title:"PLT Fundamentals",permalink:"/cs-notes/programming-language-theory/plt-fundamentals"}},l={},s=[{value:"All pages",id:"all-pages",level:3}];function m(n){const e={a:"a",admonition:"admonition",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.admonition,{type:"tip",children:(0,a.jsxs)(e.p,{children:["Recommend taking a look at ",(0,a.jsx)(e.a,{href:"/theory-of-computation-and-automata",children:"theory of computation and automata"})," first."]})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Main Source"})," :"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Programming Language Pragmatics - Michael L. Scott"})}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"all-pages",children:"All pages"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/plt-fundamentals",children:"PLT Fundamentals"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/syntax",children:"Syntax"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/parsing",children:"Parsing"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/names-scopes-bindings",children:"Names, Scopes, Bindings"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/semantic-analysis",children:"Semantic Analysis"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/target-architecture",children:"Target Architecture"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/control-flow",children:"Control Flow"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/data-types",children:"Data Types"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/subroutines",children:"Subroutines"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/data-abstraction",children:"Data Abstraction"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/functional-languages",children:"Functional Languages"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/logic-languages",children:"Logic Languages"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/concurrency",children:"Concurrency"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"programming-language-theory/implementation",children:"Implementation"})}),"\n"]})]})}function c(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},11151:(n,e,r)=>{r.d(e,{Z:()=>g,a:()=>i});var a=r(67294);const t={},o=a.createContext(t);function i(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function g(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);