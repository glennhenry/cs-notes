"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[4778],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>y});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function g(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),m=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):g(g({},r),e)),t},p=function(e){var r=m(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(t),u=a,y=c["".concat(l,".").concat(u)]||c[u]||s[u]||o;return t?n.createElement(y,g(g({ref:r},p),{},{components:t})):n.createElement(y,g({ref:r},p))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,g=new Array(o);g[0]=u;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[c]="string"==typeof e?e:a,g[1]=i;for(var m=2;m<o;m++)g[m]=t[m];return n.createElement.apply(null,g)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},70210:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>g,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=t(87462),a=(t(67294),t(3905));const o={slug:"/programming-language-theory",id:"programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes"},g=void 0,i={unversionedId:"programming-language-theory/programming-language-theory",id:"programming-language-theory/programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes",source:"@site/docs/programming-language-theory/programming-language-theory-intro.md",sourceDirName:"programming-language-theory",slug:"/programming-language-theory",permalink:"/cs-notes/programming-language-theory",draft:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/programming-language-theory/programming-language-theory-intro.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1699443757,formattedLastUpdatedAt:"Nov 8, 2023",frontMatter:{slug:"/programming-language-theory",id:"programming-language-theory",title:"Programming Language Theory",description:"Programming Language Theory Notes"},sidebar:"sidebar",previous:{title:"Compilers",permalink:"/cs-notes/compilers"},next:{title:"System Programming",permalink:"/cs-notes/system-programming"}},l={},m=[{value:"All pages",id:"all-pages",level:3}],p={toc:m},c="wrapper";function s(e){let{components:r,...t}=e;return(0,a.kt)(c,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Programming Language Theory")," is ..."),(0,a.kt)("h3",{id:"all-pages"},"All pages"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a"),(0,a.kt)("li",{parentName:"ul"},"b"),(0,a.kt)("li",{parentName:"ul"},"c"),(0,a.kt)("li",{parentName:"ul"},"type system (primitive, complex object, generics, type cast, type conversion, inference, checking, type safety, strong weak type, static dynamic type (ref to computer and programming terminology))")),(0,a.kt)("p",null,"implementation of modern language features, such as OOP, threading, handling null, handling exception."))}s.isMDXComponent=!0}}]);