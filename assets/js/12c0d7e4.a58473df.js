"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[212],{20222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var s=n(85893),o=n(11151);const c={slug:"/backend-system/websocket",id:"websocket",title:"WebSocket",description:"WebSocket"},i=void 0,a={id:"backend-system/websocket/websocket",title:"WebSocket",description:"WebSocket",source:"@site/docs/backend-system/08-websocket/websocket.md",sourceDirName:"backend-system/08-websocket",slug:"/backend-system/websocket",permalink:"/cs-notes/backend-system/websocket",draft:!1,unlisted:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/backend-system/08-websocket/websocket.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1717849639e3,frontMatter:{slug:"/backend-system/websocket",id:"websocket",title:"WebSocket",description:"WebSocket"},sidebar:"sidebar",previous:{title:"Webhook",permalink:"/cs-notes/backend-system/webhook"},next:{title:"Authentication",permalink:"/cs-notes/backend-system/authentication"}},r={},l=[{value:"WebSocket Process",id:"websocket-process",level:3}];function h(e){const t={a:"a",br:"br",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Main Source :"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"https://youtu.be/1BfCnjr_Vjg?si=tsOQg9sFSVmgc3vZ",children:"WebSockets in 100 Seconds - Fireship"})})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"https://stackoverflow.com/questions/23172760/differences-between-webhook-and-websocket",children:"Differences between webhook and websocket? - stackoverflow"})})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"WebSocket"})," is a communication protocol that allows full-duplex communication, meaning it allows simultaneous data flow in both direction at the same time. WebSocket establish a persistent connection over a single ",(0,s.jsx)(t.a,{href:"/computer-networking/tcp-protocol",children:"TCP"})," connection, it doesn't need to make request to server like ",(0,s.jsx)(t.a,{href:"/computer-networking/http-https#http",children:"HTTP"})," everytime it want to send new data. WebSocket is suited for real-time communication that needs frequent update such as live dashboard or chat application."]}),"\n",(0,s.jsxs)(t.p,{children:["WebSocket is an alternative to ",(0,s.jsx)(t.a,{href:"/backend-system/webhook#polling",children:"pooling"})," for real-time communication. Using pooling means we need to make request periodically to check for new data, this can be wasteful if the application is real-time meaning an update happens often."]}),"\n",(0,s.jsxs)(t.p,{children:["WebSocket has different use case with ",(0,s.jsx)(t.a,{href:"/backend-system/webhook#webhook",children:"Webhook"}),". WebSocket is typically used for client-server communication such as interactive communication in a chat app. Webhook, on the other hand, typically used for server-server communication or to integrate systems. The use case can be data sync between different system or notify external server."]}),"\n",(0,s.jsx)(t.h3,{id:"websocket-process",children:"WebSocket Process"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Handshake"})," : The WebSocket process begins with a handshake between the client and the server. The client sends an HTTP request to the server with WebSocket version included to initiate a communication using WebSocket. If the server supports WebSocket, it responds with an HTTP 101 status code indicating the switch to the WebSocket protocol from HTTP protocol."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Data Exchange & Events"})," : After connection is established, both the client and the server can start sending data to each other in real-time. Client or server may receive events or callbacks such as connection open, message received, error, and connection close events."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Connection Termination"})," : When the client or the server decides to close the WebSocket connection, a close message is exchanged, indicating the intention to terminate the connection. Once both sides have acknowledged the close message, the connection is closed, and the WebSocket session ends."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"Websocket process",src:n(52956).Z+"",width:"654",height:"420"}),(0,s.jsx)(t.br,{}),"\n","Source : ",(0,s.jsx)(t.a,{href:"https://www.wallarm.com/what/a-simple-explanation-of-what-a-websocket-is",children:"https://www.wallarm.com/what/a-simple-explanation-of-what-a-websocket-is"})]})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},52956:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/websocket-e0432006326bb1dd7171b8a457e9f734.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var s=n(67294);const o={},c=s.createContext(o);function i(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);