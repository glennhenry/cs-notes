"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[8466],{2802:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/png-transparency-91cac1cd3cac33c08231fa5e63075800.png"},10291:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"digital-media-processing/png/png","title":"PNG","description":"PNG","source":"@site/docs/digital-media-processing/18-png/png.md","sourceDirName":"digital-media-processing/18-png","slug":"/digital-media-processing/png","permalink":"/cs-notes/digital-media-processing/png","draft":false,"unlisted":false,"editUrl":"https://github.com/glennhenry/cs-notes/tree/main/docs/digital-media-processing/18-png/png.md","tags":[],"version":"current","lastUpdatedBy":"glennhenry","lastUpdatedAt":1723542193000,"frontMatter":{"slug":"/digital-media-processing/png","id":"png","title":"PNG","description":"PNG"},"sidebar":"sidebar","previous":{"title":"JPG / JPEG","permalink":"/cs-notes/digital-media-processing/jpg-jpeg"},"next":{"title":"WebP","permalink":"/cs-notes/digital-media-processing/webp"}}');var t=i(74848),r=i(28453);const a={slug:"/digital-media-processing/png",id:"png",title:"PNG",description:"PNG"},l=void 0,o={},c=[{value:"PNG Compression",id:"png-compression",level:3},{value:"PNG Structure",id:"png-structure",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Main Source:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/PNG",children:"PNG \u2014 Wikipedia"})})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PNG (Portable Network Graphics)"})," is a digital image format that uses ",(0,t.jsx)(n.a,{href:"/digital-signal-processing/compression#lossless-compression",children:"lossless compression"}),", meaning it stores image without any loss of information, but with bigger file sizes compared to other format like ",(0,t.jsx)(n.a,{href:"/digital-media-processing/jpg-jpeg",children:"JPEG"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Other characteristic of PNG is that it supports ",(0,t.jsx)(n.a,{href:"/computer-graphics/computer-images-part-2#alpha",children:"alpha channel"})," transparency. In other word, PNG can display transparent areas within an image. Alpha channel is stored alongside the RGB channel, which mean PNG format require an extra 8 bits for each color, making a single pixel took 32 bits."]}),"\n",(0,t.jsx)(n.p,{children:"The alpha value vary between 0 (fully invisible) to 255 (fully visible). The transparency enables an image to be placed or combined with other transparent image, this is called alpha blending."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"PNG transparency compared to JPG",src:i(2802).A+"",width:"466",height:"230"}),(0,t.jsx)(n.br,{}),"\n","Source: ",(0,t.jsx)(n.a,{href:"https://www.stellarinfo.com/blog/jpg-vs-png/",children:"https://www.stellarinfo.com/blog/jpg-vs-png/"})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Typically, the transparent background is indicated by the white-gray grid."})}),"\n",(0,t.jsx)(n.h3,{id:"png-compression",children:"PNG Compression"}),"\n",(0,t.jsx)(n.p,{children:"The PNG compression consist of two steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Filtering"}),": PNG does a pre-processing before the actual compression. This step identifies patterns or correlations between pixels. It works by applying a prediction algorithm to each pixel data in a scanline pattern. The prediction algorithm produces an estimated value for each pixel, and the difference between the estimated value and the actual pixel value is stored."]}),"\n",(0,t.jsx)(n.p,{children:"There are five types of filter method in PNG, the purpose of these are to capture pattern so that it can be compressed more efficiently:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"None"}),": When there is little or no spatial correlation in the image data, no filtering is applied. Each pixel value is stored as is."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sub"}),": The pixel value is predicted based on the value of the pixel immediately before it in the same scanline."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Up"}),": The pixel value is predicted based on the value of the pixel above it in the previous scanline."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Average"}),": The pixel value is predicted based on the average of the pixel above it and the pixel immediately before it."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Path"}),": The pixel value is predicted based on a linear combination of the pixel above it, the pixel immediately before it, and the pixel diagonally above it."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"DEFLATE"}),": DEFLATE is a combination of LZ77 and ",(0,t.jsx)(n.a,{href:"/digital-signal-processing/compression#huffman-encoding",children:"Huffman encoding"})," algorithm."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"LZ77"}),": LZ77 replace repeated sequence of characters with a reference consisting an offset (indicating the distance to the start of the repeated sequence), the length (representing the number of characters in the sequence), and the character itself."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"Illustration of LZ77 compression",src:i(64258).A+"",width:"518",height:"333"}),(0,t.jsx)(n.br,{}),"\n","Source: ",(0,t.jsx)(n.a,{href:"https://www.researchgate.net/figure/An-example-of-LZ77-encoding_fig4_322296027",children:"https://www.researchgate.net/figure/An-example-of-LZ77-encoding_fig4_322296027"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Huffman Encoding"}),": After LZ77, Huffman encoding is also applied to further reduce data by making frequent symbols in smaller size and less frequent symbols in larger size."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"png-structure",children:"PNG Structure"}),"\n",(0,t.jsx)(n.p,{children:"PNG structures its data in chunks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PNG Signature"}),": The file starts with an 8-byte signature that identifies it as a PNG file. The signature helps software recognize and validate the file format."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IHDR Chunk"}),": The IHDR (Image Header) chunk stores essential information about the image, such as its dimensions (width and height), bit depth, color type, compression method, and interlace method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ancillary Chunks"}),": After the IHDR chunk, there can be an optional ancillary chunks that provide additional information and features. There are many types of ancillary chunks, common examples include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bKGD (Background)"}),": The default background color."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PLTE (Palette)"}),": This chunk defines a color palette for indexed color images."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tRNS (Transparency)"}),": It specifies transparency information for the image, such as alpha values for individual palette entries or a single transparent color."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pHYs (Physical Dimensions)"}),": This chunk indicates the intended physical size of the image in terms of pixels per unit."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tIME (Last Modification Time)"}),": It stores the timestamp of the last image modification."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Image Data"}),": The actual image data comes after the header and optional ancillary chunks. The image data is compressed using a lossless compression, this chunk is called IDAT."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IEND Chunk"}),": The IEND (Image End) chunk marks the end of the PNG file. It serves as a marker to indicate that there are no more chunks following it."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"Structure of PNG image",src:i(32773).A+"",width:"668",height:"320"}),(0,t.jsx)(n.br,{}),"\n","Source: ",(0,t.jsx)(n.a,{href:"https://github.com/HugoJH/HideIntoPNG",children:"https://github.com/HugoJH/HideIntoPNG"})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},32773:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/png-structure-a84a7e943fe72be336b908f9e28eaf9d.png"},64258:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/lz77-d76ac351fd75df5cd7a0ed1749abc981.png"}}]);