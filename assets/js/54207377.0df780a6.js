"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[1994],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>f});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,f=u["".concat(s,".").concat(d)]||u[d]||g[d]||o;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},32454:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(87462),a=(r(67294),r(3905));const o={slug:"/deep-learning/natural-language-processing/rnn",id:"rnn",title:"RNN",description:"RNN"},i=void 0,l={unversionedId:"deep-learning/natural-language-processing/rnn/rnn",id:"deep-learning/natural-language-processing/rnn/rnn",title:"RNN",description:"RNN",source:"@site/docs/deep-learning/04-natural-language-processing/01-rnn/rnn.md",sourceDirName:"deep-learning/04-natural-language-processing/01-rnn",slug:"/deep-learning/natural-language-processing/rnn",permalink:"/cs-notes/deep-learning/natural-language-processing/rnn",draft:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/deep-learning/04-natural-language-processing/01-rnn/rnn.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1695035831,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{slug:"/deep-learning/natural-language-processing/rnn",id:"rnn",title:"RNN",description:"RNN"},sidebar:"sidebar",previous:{title:"Natural Language Processing",permalink:"/cs-notes/deep-learning/natural-language-processing"},next:{title:"LSTM",permalink:"/cs-notes/deep-learning/natural-language-processing/lstm"}},s={},c=[],p={toc:c},u="wrapper";function g(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'RNN type of nn which is able to maintain "memory" in order by process the information sequentially, parameter shared across the sequence (short term memory). uses Backpropagation Through Time (BTT). Typically used for predicting character or word in NLP'),(0,a.kt)("p",null,"Vanishing gradient problem"))}g.isMDXComponent=!0}}]);