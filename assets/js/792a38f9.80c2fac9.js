"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[9061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),u=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(m.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,g=p["".concat(m,".").concat(d)]||p[d]||c[d]||a;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const a={slug:"/data-structures-and-algorithms/minimum-spanning-tree",id:"minimum-spanning-tree",title:"Minimum Spanning Tree",description:"Minimum Spanning Tree"},o=void 0,s={unversionedId:"data-structures-and-algorithms/minimum-spanning-tree/minimum-spanning-tree",id:"data-structures-and-algorithms/minimum-spanning-tree/minimum-spanning-tree",title:"Minimum Spanning Tree",description:"Minimum Spanning Tree",source:"@site/docs/data-structures-and-algorithms/27-minimum-spanning-tree/minimum-spanning-tree.md",sourceDirName:"data-structures-and-algorithms/27-minimum-spanning-tree",slug:"/data-structures-and-algorithms/minimum-spanning-tree",permalink:"/cs-notes/data-structures-and-algorithms/minimum-spanning-tree",draft:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/data-structures-and-algorithms/27-minimum-spanning-tree/minimum-spanning-tree.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1700993986,formattedLastUpdatedAt:"Nov 26, 2023",frontMatter:{slug:"/data-structures-and-algorithms/minimum-spanning-tree",id:"minimum-spanning-tree",title:"Minimum Spanning Tree",description:"Minimum Spanning Tree"},sidebar:"sidebar",previous:{title:"Topological Sort",permalink:"/cs-notes/data-structures-and-algorithms/topological-sort"},next:{title:"Complexity Theory",permalink:"/cs-notes/data-structures-and-algorithms/complexity-theory"}},m={},u=[{value:"Prim&#39;s Algorithm",id:"prims-algorithm",level:3}],l={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Main Source :")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"})),(0,i.kt)("p",null,"Minimum Spanning Tree page"),(0,i.kt)("h3",{id:"prims-algorithm"},"Prim's Algorithm"),(0,i.kt)("p",null,"difference to Kruskal"))}c.isMDXComponent=!0}}]);