"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[9480],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),l=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),k=r,b=d["".concat(i,".").concat(k)]||d[k]||m[k]||a;return n?o.createElement(b,c(c({ref:t},p),{},{components:n})):o.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=k;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},62668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={slug:"/backend-development/websocket",id:"websocket",title:"WebSocket",description:"WebSocket"},c=void 0,s={unversionedId:"backend-development/websocket/websocket",id:"backend-development/websocket/websocket",title:"WebSocket",description:"WebSocket",source:"@site/docs/backend-development/08-websocket/websocket.md",sourceDirName:"backend-development/08-websocket",slug:"/backend-development/websocket",permalink:"/cs-notes/backend-development/websocket",draft:!1,editUrl:"https://github.com/glennhenry/cs-notes/tree/main/docs/backend-development/08-websocket/websocket.md",tags:[],version:"current",lastUpdatedBy:"glennhenry",lastUpdatedAt:1695140643,formattedLastUpdatedAt:"Sep 19, 2023",frontMatter:{slug:"/backend-development/websocket",id:"websocket",title:"WebSocket",description:"WebSocket"},sidebar:"sidebar",previous:{title:"Webhook",permalink:"/cs-notes/backend-development/webhook"},next:{title:"Authentication",permalink:"/cs-notes/backend-development/authentication"}},i={},l=[{value:"WebSocket Process",id:"websocket-process",level:3}],p={toc:l},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Main Source :")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://youtu.be/1BfCnjr_Vjg?si=tsOQg9sFSVmgc3vZ"},"WebSockets in 100 Seconds - Fireship"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://stackoverflow.com/questions/23172760/differences-between-webhook-and-websocket"},"Differences between webhook and websocket? - stackoverflow")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WebSocket")," is a communication protocol that allows full-duplex communication, meaning it allows simultaneous data flow in both direction at the same time. WebSocket establish a persistent connection over a single ",(0,r.kt)("a",{parentName:"p",href:"/computer-networking/tcp-protocol"},"TCP")," connection, it doesn't need to make request to server like ",(0,r.kt)("a",{parentName:"p",href:"/computer-networking/http-https#http"},"HTTP")," everytime it want to send new data. WebSocket is suited for real-time communication that needs frequent update such as live dashboard or chat application."),(0,r.kt)("p",null,"WebSocket is an alternative to ",(0,r.kt)("a",{parentName:"p",href:"/backend-development/webhook#pooling"},"pooling")," for real-time communication. Using pooling means we need to make request periodically to check for new data, this can be wasteful if the application is real-time meaning an update happens often."),(0,r.kt)("p",null,"WebSocket has different use case with ",(0,r.kt)("a",{parentName:"p",href:"/backend-development/webhook#webhook"},"Webhook"),". WebSocket is typically used for client-server communication such as interactive communication in a chat app. Webhook, on the other hand, typically used for server-server communication or to integrate systems. The use case can be data sync between different system or notify external server."),(0,r.kt)("h3",{id:"websocket-process"},"WebSocket Process"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Handshake")," : The WebSocket process begins with a handshake between the client and the server. The client sends an HTTP request to the server with WebSocket version included to initiate a communication using WebSocket. If the server supports WebSocket, it responds with an HTTP 101 status code indicating the switch to the WebSocket protocol from HTTP protocol.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Data Exchange & Events")," : After connection is established, both the client and the server can start sending data to each other in real-time. Client or server may receive events or callbacks such as connection open, message received, error, and connection close events.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Connection Termination")," : When the client or the server decides to close the WebSocket connection, a close message is exchanged, indicating the intention to terminate the connection. Once both sides have acknowledged the close message, the connection is closed, and the WebSocket session ends."))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Websocket process",src:n(82424).Z,width:"654",height:"420"}),(0,r.kt)("br",{parentName:"p"}),"\n","Source : ",(0,r.kt)("a",{parentName:"p",href:"https://www.wallarm.com/what/a-simple-explanation-of-what-a-websocket-is"},"https://www.wallarm.com/what/a-simple-explanation-of-what-a-websocket-is")))}m.isMDXComponent=!0},82424:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/websocket-e0432006326bb1dd7171b8a457e9f734.png"}}]);