"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[7125],{28453:(r,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var a=s(96540);const e={},n=a.createContext(e);function i(r){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof r?r(t):{...t,...r}}),[t,r])}function l(r){let t;return t=r.disableParentContext?"function"==typeof r.components?r.components(e):r.components||e:i(r.components),a.createElement(n.Provider,{value:t},r.children)}},95145:(r,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-structures-and-algorithms/data-structures-and-algorithms","title":"Data Structures & Algorithms","description":"Data Structures & Algorithms Notes","source":"@site/docs/data-structures-and-algorithms/data-structures-and-algorithms-intro.md","sourceDirName":"data-structures-and-algorithms","slug":"/data-structures-and-algorithms","permalink":"/cs-notes/data-structures-and-algorithms","draft":false,"unlisted":false,"editUrl":"https://github.com/glennhenry/cs-notes/tree/main/docs/data-structures-and-algorithms/data-structures-and-algorithms-intro.md","tags":[],"version":"current","lastUpdatedBy":"glennhenry","lastUpdatedAt":1714547460000,"frontMatter":{"slug":"/data-structures-and-algorithms","id":"data-structures-and-algorithms","title":"Data Structures & Algorithms","description":"Data Structures & Algorithms Notes"},"sidebar":"sidebar","previous":{"title":"Networking Command","permalink":"/cs-notes/computer-networking/networking-command"},"next":{"title":"Analysis of Algorithms","permalink":"/cs-notes/data-structures-and-algorithms/analysis-of-algorithms"}}');var e=s(74848),n=s(28453);const i={slug:"/data-structures-and-algorithms",id:"data-structures-and-algorithms",title:"Data Structures & Algorithms",description:"Data Structures & Algorithms Notes"},l=void 0,d={},c=[{value:"All pages",id:"all-pages",level:3}];function h(r){const t={a:"a",h3:"h3",li:"li",p:"p",ul:"ul",...(0,n.R)(),...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.p,{children:["See the ",(0,e.jsx)(t.a,{href:"/computer-and-programming-fundamentals/data-structures-and-algorithms",children:"introduction to data structures and algorithms"})," first."]}),"\n",(0,e.jsx)(t.h3,{id:"all-pages",children:"All pages"}),"\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/analysis-of-algorithms",children:"Analysis of Algorithms"})}),"\n",(0,e.jsxs)(t.li,{children:["Data Structures","\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/array",children:"Array"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/linked-list",children:"Linked-List"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/stack",children:"Stack"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/queue",children:"Queue"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/hash-table",children:"Hash Table"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/set",children:"Set"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/tree",children:"Tree"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/heap",children:"Heap"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/graph",children:"Graph"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/trie",children:"Trie"})}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(t.li,{children:["Algorithms","\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsxs)(t.li,{children:["Common Types","\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/sorting",children:"Sorting"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/search",children:"Search"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/recursion",children:"Recursion"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/divide-and-conquer",children:"Divide And Conquer"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/traversal",children:"Traversal"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/backtracking",children:"Backtracking"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/greedy",children:"Greedy"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/dynamic-programming",children:"Dynamic Programming"})}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(t.li,{children:["Other Algorithms","\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/two-pointer",children:"Two Pointer"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/sliding-window",children:"Sliding Window"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/prefix-sum",children:"Prefix Sum"})}),"\n",(0,e.jsxs)(t.li,{children:["Graph Algorithms","\n",(0,e.jsxs)(t.ul,{children:["\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/cycle-detection",children:"Cycle Detection"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/shortest-path",children:"Shortest Path"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/union-find",children:"Union Find"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/topological-sort",children:"Topological Sort"})}),"\n",(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:"data-structures-and-algorithms/minimum-spanning-tree",children:"Minimum Spanning Tree"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function o(r={}){const{wrapper:t}={...(0,n.R)(),...r.components};return t?(0,e.jsx)(t,{...r,children:(0,e.jsx)(h,{...r})}):h(r)}}}]);